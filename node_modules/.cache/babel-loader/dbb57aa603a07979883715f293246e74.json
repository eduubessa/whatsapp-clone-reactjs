{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeGifs = exports.normalizeGif = exports.USER_BOOL_PROPS = exports.BOOL_PROPS = void 0;\n/**\n * @hidden\n */\n\nexports.BOOL_PROPS = ['is_anonymous', 'is_community', 'is_featured', 'is_hidden', 'is_indexable', 'is_preserve_size', 'is_realtime', 'is_removed', 'is_sticker'];\n/**\n * @hidden\n */\n\nexports.USER_BOOL_PROPS = ['suppress_chrome', 'is_public', 'is_verified'];\n\nvar makeBool = function (obj) {\n  return function (prop) {\n    return obj[prop] = !!obj[prop];\n  };\n}; // tags sometimes are objects that have a text prop, sometimes they're strings\n\n\nvar getTag = function (tag) {\n  return typeof tag === 'string' ? tag : tag.text;\n};\n\nvar normalize = function (gif, responseId, pingbackType) {\n  if (responseId === void 0) {\n    responseId = '';\n  }\n\n  if (pingbackType === void 0) {\n    pingbackType = '';\n  }\n\n  var newGif = __assign({}, gif);\n\n  newGif.id = String(newGif.id);\n  newGif.tags = (newGif.tags || []).map(getTag);\n\n  if (!newGif.bottle_data) {\n    newGif.bottle_data = {};\n  }\n\n  newGif.response_id = responseId;\n  newGif.pingback_event_type = pingbackType;\n  exports.BOOL_PROPS.forEach(makeBool(newGif));\n  var user = newGif.user;\n\n  if (user) {\n    var newUser = __assign({}, user);\n\n    exports.USER_BOOL_PROPS.forEach(makeBool(newUser));\n    newGif.user = newUser;\n  }\n\n  return newGif;\n};\n/**\n * @hidden\n */\n\n\nexports.normalizeGif = function (result, pingbackType) {\n  var response_id = result.meta.response_id;\n  result.data = normalize(result.data, response_id, pingbackType);\n  return result;\n};\n/**\n * @hidden\n */\n\n\nexports.normalizeGifs = function (result, pingbackType) {\n  var response_id = result.meta.response_id;\n  result.data = result.data.map(function (gif) {\n    return normalize(gif, response_id, pingbackType);\n  });\n  return result;\n};","map":{"version":3,"sources":["../../src/normalize/gif.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;;;;AAGa,OAAA,CAAA,UAAA,GAAa,CACtB,cADsB,EAEtB,cAFsB,EAGtB,aAHsB,EAItB,WAJsB,EAKtB,cALsB,EAMtB,kBANsB,EAOtB,aAPsB,EAQtB,YARsB,EAStB,YATsB,CAAb;AAYb;;;;AAGa,OAAA,CAAA,eAAA,GAAkB,CAAC,iBAAD,EAAoB,WAApB,EAAiC,aAAjC,CAAlB;;AAEb,IAAM,QAAQ,GAAG,UAAC,GAAD,EAAS;AAAK,SAAA,UAAC,IAAD,EAAa;AAAK,WAAC,GAAG,CAAC,IAAD,CAAH,GAAY,CAAC,CAAC,GAAG,CAAlB,IAAkB,CAAlB;AAAlB,GAAA;AAA2C,CAA1E,C,CAIA;;;AACA,IAAM,MAAM,GAAG,UAAC,GAAD,EAAkB;AAAK,SAAC,OAAO,GAAP,KAAe,QAAf,GAA2B,GAA3B,GAA6C,GAAW,CAAzD,IAAA;AAA+D,CAArG;;AAEA,IAAM,SAAS,GAAG,UAAC,GAAD,EAAW,UAAX,EAAoC,YAApC,EAAwE;AAA7D,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,EAAA;AAAuB;;AAAE,MAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,EAAA;AAAoC;;AACtF,MAAM,MAAM,GAAA,QAAA,CAAA,EAAA,EAAc,GAAd,CAAZ;;AACA,EAAA,MAAM,CAAC,EAAP,GAAY,MAAM,CAAC,MAAM,CAAC,EAAR,CAAlB;AACA,EAAA,MAAM,CAAC,IAAP,GAAc,CAAC,MAAM,CAAC,IAAP,IAAe,EAAhB,EAAoB,GAApB,CAAwB,MAAxB,CAAd;;AACA,MAAI,CAAC,MAAM,CAAC,WAAZ,EAAyB;AACrB,IAAA,MAAM,CAAC,WAAP,GAAqB,EAArB;AACH;;AACD,EAAA,MAAM,CAAC,WAAP,GAAqB,UAArB;AACA,EAAA,MAAM,CAAC,mBAAP,GAA6B,YAA7B;AACA,EAAA,OAAA,CAAA,UAAA,CAAW,OAAX,CAAmB,QAAQ,CAAC,MAAD,CAA3B;AACQ,MAAA,IAAI,GAAK,MAAM,CAAX,IAAJ;;AACR,MAAI,IAAJ,EAAU;AACN,QAAM,OAAO,GAAA,QAAA,CAAA,EAAA,EAAQ,IAAR,CAAb;;AACA,IAAA,OAAA,CAAA,eAAA,CAAgB,OAAhB,CAAwB,QAAQ,CAAC,OAAD,CAAhC;AACA,IAAA,MAAM,CAAC,IAAP,GAAc,OAAd;AACH;;AACD,SAAO,MAAP;AACH,CAjBD;AAmBA;;;;;AAGa,OAAA,CAAA,YAAA,GAAe,UAAC,MAAD,EAAoB,YAApB,EAAoD;AACpE,MAAA,WAAW,GAAK,MAAM,CAAC,IAAP,CAAL,WAAX;AACR,EAAA,MAAM,CAAC,IAAP,GAAc,SAAS,CAAC,MAAM,CAAC,IAAR,EAAc,WAAd,EAA2B,YAA3B,CAAvB;AACA,SAAO,MAAP;AACH,CAJY;AAMb;;;;;AAGa,OAAA,CAAA,aAAA,GAAgB,UAAC,MAAD,EAAqB,YAArB,EAAqD;AACtE,MAAA,WAAW,GAAK,MAAM,CAAC,IAAP,CAAL,WAAX;AACR,EAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAgB,UAAA,GAAA,EAAG;AAAI,WAAA,SAAS,CAAC,GAAD,EAAM,WAAN,EAAT,YAAS,CAAT;AAAyC,GAAhE,CAAd;AACA,SAAO,MAAP;AACH,CAJY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeGifs = exports.normalizeGif = exports.USER_BOOL_PROPS = exports.BOOL_PROPS = void 0;\n/**\n * @hidden\n */\nexports.BOOL_PROPS = [\n    'is_anonymous',\n    'is_community',\n    'is_featured',\n    'is_hidden',\n    'is_indexable',\n    'is_preserve_size',\n    'is_realtime',\n    'is_removed',\n    'is_sticker',\n];\n/**\n * @hidden\n */\nexports.USER_BOOL_PROPS = ['suppress_chrome', 'is_public', 'is_verified'];\nvar makeBool = function (obj) { return function (prop) { return (obj[prop] = !!obj[prop]); }; };\n// tags sometimes are objects that have a text prop, sometimes they're strings\nvar getTag = function (tag) { return (typeof tag === 'string' ? tag : tag.text); };\nvar normalize = function (gif, responseId, pingbackType) {\n    if (responseId === void 0) { responseId = ''; }\n    if (pingbackType === void 0) { pingbackType = ''; }\n    var newGif = __assign({}, gif);\n    newGif.id = String(newGif.id);\n    newGif.tags = (newGif.tags || []).map(getTag);\n    if (!newGif.bottle_data) {\n        newGif.bottle_data = {};\n    }\n    newGif.response_id = responseId;\n    newGif.pingback_event_type = pingbackType;\n    exports.BOOL_PROPS.forEach(makeBool(newGif));\n    var user = newGif.user;\n    if (user) {\n        var newUser = __assign({}, user);\n        exports.USER_BOOL_PROPS.forEach(makeBool(newUser));\n        newGif.user = newUser;\n    }\n    return newGif;\n};\n/**\n * @hidden\n */\nexports.normalizeGif = function (result, pingbackType) {\n    var response_id = result.meta.response_id;\n    result.data = normalize(result.data, response_id, pingbackType);\n    return result;\n};\n/**\n * @hidden\n */\nexports.normalizeGifs = function (result, pingbackType) {\n    var response_id = result.meta.response_id;\n    result.data = result.data.map(function (gif) { return normalize(gif, response_id, pingbackType); });\n    return result;\n};\n//# sourceMappingURL=gif.js.map"]},"metadata":{},"sourceType":"script"}