{"ast":null,"code":"var _jsxFileName = \"/Users/eduubessa/Sites/whatsapp-clone/src/Components/ConversationContentComponent.js\";\nimport React from 'react';\nimport './ConversationContentComponent.css'; // Icons components\n\nimport EmojiPicker from \"emoji-picker-react\";\nimport MicIcon from '@material-ui/icons/Mic';\nimport GifIcon from '@material-ui/icons/Gif';\nimport { Grid } from '@giphy/react-components';\nimport SendIcon from '@material-ui/icons/Send';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nexport default (({\n  conversation\n}) => {\n  let recognition = null;\n  let speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n  if (speechRecognition !== undefined) {\n    recognition = new speechRecognition();\n  }\n\n  const giphyFetch = new GiphyFetch(\"k18eUSkWh7JVQEoGI3bYfbQKleW7yyph\");\n  const [emojiOpen, setEmojiOpen] = React.useState(false);\n  const [gifsOpen, setGifsOpen] = React.useState(false);\n  const [text, setText] = React.useState('');\n  const [listening, setListenning] = React.useState(false);\n\n  const handleEmojiClick = (e, emojiObject) => {\n    setText(text + emojiObject.emoji);\n  };\n\n  const giphyFetchTrending = offset => giphyFetch.trending({\n    offset,\n    limit: 10\n  });\n\n  const handleGifClick = (e, giphyObject) => {\n    console.log(giphyObject);\n  };\n\n  const handleOpenEmojiPicker = () => {\n    setEmojiOpen(true);\n    setGifsOpen(false);\n  };\n\n  const handleCloseEmojiPicker = () => {\n    setEmojiOpen(false);\n  };\n\n  const handleClickGifsPicker = () => {\n    setEmojiOpen(false);\n    setGifsOpen(true);\n  };\n\n  const handleSendMessageClick = () => {};\n\n  const handleMicClick = () => {\n    if (recognition !== null) {\n      recognition.onstart = () => {\n        setListenning(true);\n      };\n\n      recognition.onend = () => {\n        setListenning(false);\n      };\n\n      recognition.onresult = e => {\n        setText(e.results[0][0].transcript);\n      };\n\n      recognition.start();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"conversation-content-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-header-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: conversation.avatar,\n    alt: conversation.username,\n    className: \"conversation-content-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, conversation.username)), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"conversation-content-header-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    style: {\n      color: '#919191'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMore, {\n    style: {\n      color: '#919191'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"hello\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-emojis\",\n    style: {\n      height: emojiOpen ? '200px' : '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EmojiPicker, {\n    onEmojiClick: handleEmojiClick,\n    disableSearchBar: true,\n    disableSkinTonePicker: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-gifs\",\n    style: {\n      height: gifsOpen ? '200px' : '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    width: window.innerWidth,\n    fetchGifs: giphyFetchTrending,\n    gutter: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    className: \"conversation-content-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-footer-pre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-button\",\n    onClick: handleCloseEmojiPicker,\n    style: {\n      width: emojiOpen || gifsOpen ? '40px' : '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    style: {\n      color: '#919191'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-button\",\n    onClick: handleOpenEmojiPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    style: {\n      color: emojiOpen ? '#009688' : '#919191'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  })), (emojiOpen || gifsOpen) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(GifIcon, {\n    style: {\n      color: gifsOpen ? '#009688' : '#919191'\n    },\n    onClick: handleClickGifsPicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AttachFileIcon, {\n    style: {\n      color: '#919191'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-footer-inputarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    className: \"conversation-content-input\",\n    placeholder: \"Digite uma mensagem...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-content-footer-pos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, text !== '' && /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      color: '#919191'\n    },\n    onClick: handleSendMessageClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), text === '' && /*#__PURE__*/React.createElement(MicIcon, {\n    style: {\n      color: listening ? '#126ece' : '#919191'\n    },\n    onClick: handleMicClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/eduubessa/Sites/whatsapp-clone/src/Components/ConversationContentComponent.js"],"names":["React","EmojiPicker","MicIcon","GifIcon","Grid","SendIcon","GiphyFetch","CloseIcon","SearchIcon","ExpandMore","AttachFileIcon","InsertEmoticonIcon","conversation","recognition","speechRecognition","window","SpeechRecognition","webkitSpeechRecognition","undefined","giphyFetch","emojiOpen","setEmojiOpen","useState","gifsOpen","setGifsOpen","text","setText","listening","setListenning","handleEmojiClick","e","emojiObject","emoji","giphyFetchTrending","offset","trending","limit","handleGifClick","giphyObject","console","log","handleOpenEmojiPicker","handleCloseEmojiPicker","handleClickGifsPicker","handleSendMessageClick","handleMicClick","onstart","onend","onresult","results","transcript","start","avatar","username","color","height","innerWidth","width","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ConversationContentComponent.css'\n\n// Icons components\nimport EmojiPicker from \"emoji-picker-react\";\nimport MicIcon from '@material-ui/icons/Mic';\nimport GifIcon from '@material-ui/icons/Gif';\nimport { Grid } from '@giphy/react-components';\nimport SendIcon from '@material-ui/icons/Send';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\n\nexport default ({conversation}) => {\n\n    let recognition = null;\n    let speechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    if(speechRecognition !== undefined)\n    {\n        recognition = new speechRecognition();\n    }\n\n    const giphyFetch = new GiphyFetch(\"k18eUSkWh7JVQEoGI3bYfbQKleW7yyph\");\n\n    const [emojiOpen, setEmojiOpen] = React.useState(false);\n    const [gifsOpen, setGifsOpen] = React.useState(false);\n    const [text, setText] = React.useState('')\n    const [listening, setListenning] = React.useState(false);\n\n    const handleEmojiClick = (e, emojiObject) => {\n        setText(text + emojiObject.emoji);\n    };\n\n    const giphyFetchTrending = (offset: number) => giphyFetch.trending({offset, limit: 10});\n\n    const handleGifClick = (e, giphyObject) => {\n        console.log(giphyObject);\n    }\n\n    const handleOpenEmojiPicker = () => {\n        setEmojiOpen(true);\n        setGifsOpen(false);\n    };\n\n    const handleCloseEmojiPicker = () => {\n        setEmojiOpen(false);\n    };\n\n    const handleClickGifsPicker = () => {\n        setEmojiOpen(false);\n        setGifsOpen(true);\n    };\n\n    const handleSendMessageClick = () => {\n\n    };\n\n    const handleMicClick = () => {\n        if(recognition !== null) {\n            recognition.onstart = () => {\n                setListenning(true);\n            };\n\n            recognition.onend = () => {\n              setListenning(false);\n            };\n\n            recognition.onresult = (e) => {\n                setText(e.results[0][0].transcript);\n            };\n\n            recognition.start();\n        }\n    };\n\n    return (\n            <div className=\"conversation-content\">\n                <header className=\"conversation-content-header\">\n                    <div className=\"conversation-content-header-info\">\n                        <img src={conversation.avatar} alt={conversation.username} className=\"conversation-content-avatar\"/>\n                        <div className=\"conversation-content-name\">{conversation.username}</div>\n                    </div>\n\n                    <section className=\"conversation-content-header-buttons\">\n                        <div className=\"conversation-content-button\">\n                            <SearchIcon style={{ color: '#919191'}} />\n                        </div>\n                        <div className=\"conversation-content-button\">\n                            <ExpandMore style={{ color: '#919191'}} />\n                        </div>\n                    </section>\n                </header>\n                <div className=\"conversation-content-body\">\n                    hello\n                </div>\n                <div className=\"conversation-content-emojis\"\n                     style={{height: emojiOpen ? '200px' : '0px'}}\n                >\n                    <EmojiPicker\n                        onEmojiClick={handleEmojiClick}\n                        disableSearchBar\n                        disableSkinTonePicker\n                    />\n                </div>\n                <div className=\"conversation-content-gifs\"\n                     style={{height: gifsOpen ? '200px' : '0px'}}\n                >\n                    <Grid\n                        width={window.innerWidth}\n                        fetchGifs={giphyFetchTrending}\n                        gutter={6}\n                    />\n                </div>\n                <footer className=\"conversation-content-footer\">\n                    <div className=\"conversation-content-footer-pre\">\n                        <div\n                            className=\"conversation-content-button\"\n                            onClick={handleCloseEmojiPicker}\n                            style={{ width: emojiOpen || gifsOpen ? '40px' : '0' }}\n                        >\n                            <CloseIcon style={{color: '#919191'}} />\n                        </div>\n                        <div\n                            className=\"conversation-content-button\"\n                            onClick={handleOpenEmojiPicker}\n                        >\n                            <InsertEmoticonIcon\n                                style={{color: emojiOpen ? '#009688' : '#919191'}}\n                            />\n                        </div>\n                        {\n                            (emojiOpen || gifsOpen) &&\n                            <div className=\"conversation-content-button\">\n                                <GifIcon\n                                    style={{color: gifsOpen ? '#009688' : '#919191'}}\n                                    onClick={handleClickGifsPicker}\n                                />\n                            </div>\n                        }\n                        <div className=\"conversation-content-button\">\n                            <AttachFileIcon style={{color: '#919191'}} />\n                        </div>\n                    </div>\n\n                    <div className=\"conversation-content-footer-inputarea\">\n                        <input\n                            type=\"text\"\n                            value={text}\n                            onChange={e=>setText(e.target.value)}\n                            className=\"conversation-content-input\"\n                            placeholder=\"Digite uma mensagem...\"\n                        />\n                    </div>\n\n                    <div className=\"conversation-content-footer-pos\">\n\n                        {\n                            text !== '' &&\n                            <SendIcon\n                                style={{color: '#919191'}}\n                                onClick={handleSendMessageClick}\n                            />\n                        }\n                        {\n                            text === '' &&\n                            <MicIcon\n                                style={{color: listening ? '#126ece' : '#919191'}}\n                                onClick={handleMicClick}\n                            />\n                        }\n                    </div>\n                </footer>\n            </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}