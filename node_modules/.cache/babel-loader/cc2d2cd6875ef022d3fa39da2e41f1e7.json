{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSession = exports.addLastSearchResponseId = exports.SESSION_STORAGE_KEY = void 0;\n\nvar cookie_1 = __importDefault(require(\"cookie\"));\n\nvar uuid_1 = require(\"uuid\"); // v1 only for pingback verfication\n\n\nexports.SESSION_STORAGE_KEY = 'responseIds';\n\nfunction getLastResponseId() {\n  try {\n    var sessionIds = sessionStorage.getItem(exports.SESSION_STORAGE_KEY);\n\n    if (sessionIds) {\n      var responseIds = JSON.parse(sessionIds) || [];\n      return responseIds[responseIds.length - 2] || '';\n    }\n  } catch (_) {}\n\n  return '';\n}\n\nfunction addLastSearchResponseId(responseId) {\n  try {\n    var existing = sessionStorage.getItem(exports.SESSION_STORAGE_KEY);\n\n    if (existing) {\n      var searchResponseIds = JSON.parse(existing);\n\n      if (searchResponseIds[searchResponseIds.length - 1] !== responseId) {\n        sessionStorage.setItem(exports.SESSION_STORAGE_KEY, JSON.stringify(__spreadArrays(searchResponseIds, [responseId])));\n      }\n    } else {\n      sessionStorage.setItem(exports.SESSION_STORAGE_KEY, JSON.stringify([responseId]));\n    }\n  } catch (_) {}\n}\n\nexports.addLastSearchResponseId = addLastSearchResponseId;\nvar gl = (typeof window !== 'undefined' ? window : global) || {};\ngl.giphyRandomId = '';\n\nvar getRandomId = function () {\n  // it exists in memory\n  if (!gl.giphyRandomId) {\n    try {\n      // it exists in storage\n      gl.giphyRandomId = localStorage.getItem('giphyRandomId');\n    } catch (_) {}\n\n    if (!gl.giphyRandomId) {\n      // we need to create it\n      gl.giphyRandomId = uuid_1.v1();\n\n      try {\n        // save in storage\n        localStorage.setItem('giphyRandomId', gl.giphyRandomId);\n      } catch (_) {}\n    }\n  }\n\n  return gl.giphyRandomId;\n}; // the session is the request payload of a pingback request\n\n\nexports.createSession = function (event_type, actions, responseId, loggedInUserId) {\n  if (responseId === void 0) {\n    responseId = '';\n  }\n\n  if (loggedInUserId === void 0) {\n    loggedInUserId = '';\n  }\n\n  return {\n    user: {\n      user_id: cookie_1.default.parse(document ? document.cookie : {}).giphy_pbid,\n      logged_in_user_id: loggedInUserId || '',\n      random_id: getRandomId()\n    },\n    events: [{\n      event_type: event_type,\n      referrer: document ? document.referrer : '',\n      actions: actions,\n      response_id: responseId,\n      prior_response_id: getLastResponseId()\n    }]\n  };\n};","map":{"version":3,"sources":["../src/session.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSession = exports.addLastSearchResponseId = exports.SESSION_STORAGE_KEY = void 0;\nvar cookie_1 = __importDefault(require(\"cookie\"));\nvar uuid_1 = require(\"uuid\"); // v1 only for pingback verfication\nexports.SESSION_STORAGE_KEY = 'responseIds';\nfunction getLastResponseId() {\n    try {\n        var sessionIds = sessionStorage.getItem(exports.SESSION_STORAGE_KEY);\n        if (sessionIds) {\n            var responseIds = JSON.parse(sessionIds) || [];\n            return responseIds[responseIds.length - 2] || '';\n        }\n    }\n    catch (_) { }\n    return '';\n}\nfunction addLastSearchResponseId(responseId) {\n    try {\n        var existing = sessionStorage.getItem(exports.SESSION_STORAGE_KEY);\n        if (existing) {\n            var searchResponseIds = JSON.parse(existing);\n            if (searchResponseIds[searchResponseIds.length - 1] !== responseId) {\n                sessionStorage.setItem(exports.SESSION_STORAGE_KEY, JSON.stringify(__spreadArrays(searchResponseIds, [responseId])));\n            }\n        }\n        else {\n            sessionStorage.setItem(exports.SESSION_STORAGE_KEY, JSON.stringify([responseId]));\n        }\n    }\n    catch (_) { }\n}\nexports.addLastSearchResponseId = addLastSearchResponseId;\nvar gl = ((typeof window !== 'undefined' ? window : global) || {});\ngl.giphyRandomId = '';\nvar getRandomId = function () {\n    // it exists in memory\n    if (!gl.giphyRandomId) {\n        try {\n            // it exists in storage\n            gl.giphyRandomId = localStorage.getItem('giphyRandomId');\n        }\n        catch (_) { }\n        if (!gl.giphyRandomId) {\n            // we need to create it\n            gl.giphyRandomId = uuid_1.v1();\n            try {\n                // save in storage\n                localStorage.setItem('giphyRandomId', gl.giphyRandomId);\n            }\n            catch (_) { }\n        }\n    }\n    return gl.giphyRandomId;\n};\n// the session is the request payload of a pingback request\nexports.createSession = function (event_type, actions, responseId, loggedInUserId) {\n    if (responseId === void 0) { responseId = ''; }\n    if (loggedInUserId === void 0) { loggedInUserId = ''; }\n    return ({\n        user: {\n            user_id: cookie_1.default.parse(document ? document.cookie : {}).giphy_pbid,\n            logged_in_user_id: loggedInUserId || '',\n            random_id: getRandomId(),\n        },\n        events: [\n            {\n                event_type: event_type,\n                referrer: document ? document.referrer : '',\n                actions: actions,\n                response_id: responseId,\n                prior_response_id: getLastResponseId(),\n            },\n        ],\n    });\n};\n//# sourceMappingURL=session.js.map"]},"metadata":{},"sourceType":"script"}